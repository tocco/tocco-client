{
  // Place your tocco-client workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Tocco React Component": {
    "prefix": "component",
    "description": "Functional React Component",
    "body": [
      "import PropTypes from 'prop-types'",
      "",
      "const ${1:Comp} = ({}) => {",
      "  return $0",
      "}",
      "",
      "$1.propTypes = {",
      "}",
      "",
      "",
      "export default $1",
      ""
    ]
  },
  "Tocco Redux Container": {
    "prefix": "container",
    "description": "Redux / React Intl Container for Component",
    "body": [
      "import {injectIntl} from 'react-intl'",
      "import {connect} from 'react-redux'",
      "",
      "import ${1:Comp} from './$1'",
      "",
      "const mapActionCreators = {",
      "  $2",
      "}",
      "",
      "const mapStateToProps = state => ({",
      "  $3",
      "})",
      "",
      "export default connect(mapStateToProps, mapActionCreators)(injectIntl($1))",
      ""
    ]
  },
  "Tocco Index File": {
    "prefix": "index",
    "description": "index.js file with default export",
    "body": ["import ${1:Comp} from './$1Container'", "", "export default $1", ""]
  },
  "Tocco Redux Action Type": {
    "prefix": "action-type",
    "description": "Redux action type const",
    "body": ["export const $1 = '$2/$1'$0"]
  },
  "Tocco Redux Action Creator": {
    "prefix": "action-creator",
    "description": "Redux action creator",
    "body": ["export const $1 = ($2) => ({", "  type: $3,", "  payload: {", "    $4", "  }", "})"]
  },
  "Tocco Redux Single Transfer Reducer": {
    "prefix": "reducer-single",
    "description": "reducerUtil.singleTransferReducer",
    "body": "[actions.$1]: reducerUtil.singleTransferReducer('$2')$0"
  },
  "Tocco Test": {
    "prefix": "test",
    "body": ["test('$1', () => {", "  $0", "})"]
  }
}
