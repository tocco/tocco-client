/*****
* import sass dependencies
*/

// TODO reduce redundancy
// TODO get rid of cumbersome imports
// TODO make it possible to use _variables.scss from customer
@import "../../../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/_variables.scss";
@import "../../../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins/_opacity.scss";
@import "../../../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins/_vendor-prefixes.scss";
@import "../../../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins/_background-variant.scss";
@import "../../../../../node_modules/font-awesome/scss/_variables.scss";

$fa-font-path: "../../../../../node_modules/font-awesome/fonts/";
@import "../../../../../node_modules/font-awesome/scss/font-awesome.scss";


/*****
* tocco-client boilerplate
* for styling convenience while developing, only used inside monorepo tocco-client
*/

// TODO replace #root with #tocco-client-development
#root {
  margin: 50px;
  border: 1px dashed $gray-lighter;
}


/*****
* extend bootstrap
*/

// control whitespace rhythm
.form-group {
  margin-bottom: $line-height-computed;
}

// list styling
ul {
  margin-bottom: $line-height-computed;
}
li > ul {
  margin-bottom: 0;
}


/*****
/* coperate design variables
*/

// TODO cetralize coperate design variables
$icon-list-item-1: '\2022';  /* bullet point */
$icon-valid: $fa-var-check;
$icon-invalid: $fa-var-times;


/*****
* icon list
* prefix list items by any character
*/

$icon-list-icon-size: floor($font-size-base * 1.5);
$icon-list-indent: $icon-list-icon-size;

// base style
.icon-list {
  list-style-type: none;
  padding-left: $icon-list-indent;

  li {
    position: relative;

    &:before {
      font-family: 'FontAwesome';
      position: absolute;
      left: -$icon-list-indent;
      content: $icon-list-item-1;
    }
  }
}

// replace icon for list items with a special class
@mixin icon-list-character (
  $selector: 'li',
  $character: $icon-default
) {
  .icon-list #{$selector}:before {
    content: $character;
  }
}

// TODO replace classname "text-success" by "state-valid"
@include icon-list-character (
  $selector: 'li.text-success',
  $character: $icon-valid
);

// TODO replace classname "text-danger" by "state-invalid"
@include icon-list-character (
  $selector: 'li.text-danger',
  $character: $icon-invalid
);



/*****
* emphasize field state
*/

// base style
@mixin field-emphasis-variant(
  // TODO interlink default variables with most usefull bootstrap variables, may extend section "coperate design variables"
  $background-color: $gray-lighter,
  $background-color-focus: $gray-lighter,
  $background-color-disable: $gray-lighter,
  $border-color: $gray-light,
  $border-color-focus: $gray-light,
  $border-color-disable: $gray-light,
  $border-style: solid,
  $border-style-focus: solid,
  $border-style-disable: dashed,
  $border-width: 1px,
  $accessible: true) {

  border-width: $border-width;
  box-shadow: none;
  // TODO create variable to control transition time, may use a bootstrap variable
  transition: border-color 300ms,
              box-shadow 300ms;

  @if $accessible == true {
    background-color: $background-color;
    border-color: $border-color;
    border-style: $border-style

  } @else {
    background-color: $background-color-disable;
    border-color: $border-color-disable;
    border-style: $border-style-disable;
  }

  @if $accessible == true {
    &:hover,
    &:focus {
      background-color: $background-color-focus;
      border-color: $border-color-focus;
      border-style: $border-style-focus;
      /* TODO create variable to control glow dimension, may use @include box-shadow(...); or create a convenience class */
      box-shadow: 0 0 5px $border-color-focus;
    }
  }
}

/* fields width invalid values are red */
/* TODO replace selector with ".state-invalid" as soon as is implemented in validationRules */
.form-control {
  @include field-emphasis-variant(
    $border-color: $brand-danger,
    $border-color-focus: $brand-danger
  );
}

/* fields with valid values are green */
/* TODO replace selector with ".state-valid" as soon as is implemented in validationRules */
.form-control:not([value=""]) {
  @include field-emphasis-variant(
    $border-color: $brand-success,
    $border-color-focus: $brand-success
  );
}

/* inaccessible fields are gray */
/* INFO set attribute readonly and disable always in conjunction for input fields and textareas */
.form-control[disabled],
.form-control[readonly] {
  @include field-emphasis-variant(
    $accessible: false
  );
}


/*****
* show state pending
*/

// TODO rename class "update-pending" to "state-pending"
.update-pending {
  .fa {
    @extend .fa-spin;

    &:before {
      content: $fa-var-spinner;
    };
  }
}

/*****
* base package styling
*/

// TODO may use "component-wrapper" as class name
.load-mask {
  position: relative;  /* change position from static to relative for having a reasonable outline for positioning */
  min-height: 100px;  /* TODO remove min-height, wrapper must derive height from containing content */
}
